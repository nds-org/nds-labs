#
# Using gnu make standard library for convenineces: http://gmsl.sourceforge.net/
#
#.INCLUDE_DIRS += ../Makefiles
include Makefiles/gmsl

#
# Omit old fashioed sccs/rcs, etc searching
#
.SUFFIXES:            # Delete the default suffixes
%:: RCS/%,v
%:: RCS/%
%:: s.%
%:: SCCS/s.%
%:: %,v

#
# paths where the host build dir is mapped in the container/image mapped to make vars:
#
HOSTMOUNT = /tmp/build
DEPENDENCIES = $(HOSTMOUNT)/dependencies

STEPS = $(sort $(subst buildscripts/Dockerfile.,,$(wildcard buildscripts/Dockerfile.*.?)) $(subst buildscripts/Setup.,,$(wildcard buildscripts/Setup.*.?)))
RSTEPS		= $(reverse $(STEPS))
NRSTEPS		= $(rest $(RSTEPS))
IMGS 		= $(patsubst %,%.img,$(STEPS))
LASTSTEP	= $(last $(STEPS))

#
# a timestamp from image:
#
# touch -d "`docker inspect nds-dataverse-dev | jq -r '.[0].Created'`" $file
# without jq:
# 	docker inspect --format='{{ .Created }}' nds-dataverse-dev
#
#
timestamp.%.Data : %.Data 
#docker run scratch
#$(shell docker inspect $<)
#$(eval $<)

#
# System setup
# 
#
# Dependencies management here
DEPDIR		= MakeDeps
# timestamps here
STEPSTAMP	= $(DEPDIR)/timestamp.step
#
# The final rule for the resulting image
#
$(IMG): $(STEPSTAMP).$(LASTSTEP)


# 
# Template for each step, express dependency on previous step, args StepN-image StepN+1-image
#
define STEP_TEMPLATE
$(2).img: $(1).img $(STEPSTAMP).$(1)
$(1).img: $(STEPSTAMP).$(1)
$(STEPSTAMP).$(1): MakeDeps
$(1): Dockerfile.$(1)
	docker build -t $@ -f $< --rm .
%.img: Setup.%
	docker run --name $@
endef
$(eval $(pairmap STEP_TMPL,$(RSTEPS), $(NRSTEPS)))

$(IMG): $(IMGS)
	docker tag $(IMG) $<


$(STEPSTAMP).%: $(IMG)-step.%.img
	touch $<


#genrules = $(if $(wordlist 2,2,$(1)),$(eval $(call STEP_TEMPLATE,$(firstword $(1)),$(wordlist 2,2,$(1)))) $(call genrules,$(wordlist 2,$(words $(1)),$(1))),)
#$(eval $(call genrules,$(STEPS)))

#.PHONY: $(TAG) $(TAG).tstamp
MakeDeps:
	mkdir MakeDeps

MakeDeps/%: MakeDeps


clean:
	rm -rf MakeDeps
	docker rmi $(STEPIMGS)

shell: 
	docker run --rm -it $(TAG) bash

test:
	env IMG=$(IMG) VER=$(VER) ./test/runner.sh

tag_latest:
	docker tag -f $(IMG):$(VER) $(IMG):latest

release: test tag_latest
	@if ! docker images $(IMG) | awk '{ print $$2 }' | grep -q -F $(VER); then echo "$(IMG) version $(VER) is not yet tstamp. Please run 'make build'"; false; fi
	@if ! head -n 1 Changelog.md | grep -q 'release date'; then echo 'Please note the release date in Changelog.md.' && false; fi
	docker push $(IMG)
	@echo "*** Don't forget to create a tag. git tag rel-$(VER) && git push origin rel-$(VER)"

