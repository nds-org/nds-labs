#REPO	= nds/
REPO	= 
IMG	= nds-dataverse
#VER 	= :0.1
VER	= 
TAG	= $(REPO)$(IMG)$(VER)
#
# Steps occur in order 1,2,3,4,... and consist of 2 types:   
# 
# 	Dockerfile.<name>.<step#>
# 		builds the steps image based on Dockerfile
# 	Setup.<name>.<step#>
# 		builds the steps image by instantiating a container based on the image from the preceeding step,
# 		applying the commands in the Setup script to it, then committing and tagging the image for the step.
#		Setup starts the steps container with the current host directory mapped on /tmp/setup
# 
STEPS = $(sort $(subst Dockerfile.,,$(wildcard Dockerfile.*.?)) $(subst Setup.,,$(wildcard Setup.*.?)))
NSTEPS = $(words $(STEPS))
IMGS = $(patsubst %,%.img,$(STEPS))

#
# Some meta-programming tricks
#
# meta-math
plusOne 	= $(words $(1) x)
minusOne	= $(wordlist 2,$(words $1),$1)
#
# Templates for build pattern rules
define IMG_DEP_TEMPL
.PHONY $($1): $($2)

endef
genrules = $(if $(wordlist 2,2,$(1)),$(call IMG_DEP,$(word,1,$(1)),$(word 2,$(1)))  $(call genrules,$(wordlist 2,$(words $(1)),$(1))) )
$(call genrules, $(STEPS))



reverse = $(if $(wordlist 2,2,$(1)),$(call reverse,$(wordlist 2,$(words $(1)),$(1))) $(firstword $(1)),$(1))
#reverse = $(if $(1),$(call reverse,$(wordlist 2,$(words $(1)),$(1)))) $(firstword $(1))
RIMGS = $(call reverse,$(IMGS))
ldeps = $(if $(wordlist 2,2,$(1)),"$(firstword $(1)): $(word 2,$(1))\n"  $(call ldeps,$(wordlist 2,$(words $(1)),$(1))) )
#$(eval $(call ldeps,$(RIMGS)))

.PHONY: $(TAG) $(TAG).tstamp

$(TAG): $(IMGS) $(TAG).tstamp 

define PROGRAM_template =
 $(1): $$($(1)_OBJS) $$($(1)_LIBS:%=-l%)
 ALL_OBJS   += $$($(1)_OBJS)
endef

%.img: Dockerfile.% 
	docker build -t $@ -f $< --rm .
	touch $@.tstamp

%.img: Setup.%
	docker run --name $@
	touch $@.tstamp

clean:
	rm -f *.tstamp

shell: 
	docker run --rm -it $(TAG) bash

test:
	env IMG=$(IMG) VER=$(VER) ./test/runner.sh

tag_latest:
	docker tag -f $(IMG):$(VER) $(IMG):latest

release: test tag_latest
	@if ! docker images $(IMG) | awk '{ print $$2 }' | grep -q -F $(VER); then echo "$(IMG) version $(VER) is not yet built. Please run 'make build'"; false; fi
	@if ! head -n 1 Changelog.md | grep -q 'release date'; then echo 'Please note the release date in Changelog.md.' && false; fi
	docker push $(IMG)
	@echo "*** Don't forget to create a tag. git tag rel-$(VER) && git push origin rel-$(VER)"

#
##  Test/debug stuff below
#
#
#
ld:
	echo $(call ldeps,$(RIMGS))

es:
	echo $(NSTEPS)
	echo $(call plusOne,$(NSTEPS))
	echo $(STEPS)
	echo $(IMGS)
	echo $(RIMGS)
	echo $(call IMG_FROM_DOCKERFILE, arg1, srg2)
