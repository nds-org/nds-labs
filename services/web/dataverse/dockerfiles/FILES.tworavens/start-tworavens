#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long;
use Socket;
use File::Copy;

# There are really only two dynamic parameters here --  the location of the 
# dataverse application and the location of the TwoRavens application
my $DATAVERSE_URL = $ENV{'DATAVERSE_URL'}; 
my $RAPACHEURL = $ENV{'TWORAVENS_URL'};

my $TWORAVENS_DIRECTORY="/var/www/html/dataexplore";
my $APACHE_CONFIG_DIRECTORY="/etc/httpd";
my $APACHE_WEB_DIRECTORY="/var/www/html";

for my $rFile ( "rooksource.R", "rookdata.R", "rookzelig.R", "rooksubset.R", "rooktransform.R", "rookselector.R"  ) {
    print "Configuring script " . $rFile . "...\n";

    my $rFilePath = $TWORAVENS_DIRECTORY . "/rook/" . $rFile; 

    unless ( -f $rFilePath ) {
	print "\nWARNING: Can't find " . $rFilePath . "!\n";
	print "(are you running the installer in the right directory?)\n";
    }

    open RFILEIN, $rFilePath || die $@;
    open RFILEOUT, '>' . $rFilePath . ".tmp" || die $@;

    while (<RFILEIN>) {
	# production toggle:
	s/production\<\-FALSE/production\<\-TRUE/g;
	# rApache url:
        s/https:\/\/dataverse-demo.iq.harvard.edu/$RAPACHEURL/g;
	# working directory:
	s/\/usr\/local\/glassfish4\/glassfish\/domains\/domain1\/docroot\/dataexplore/$TWORAVENS_DIRECTORY/g;
	print RFILEOUT $_;
    }

    close RFILEIN;
    close RFILEOUT;

    system ("/bin/mv " . $rFilePath . ".tmp " . $rFilePath);
}


# 2. Install the rApache config file:

print "\n\nConfiguring rApache to serve TwoRavens Rook applications...\n";

my $RAPACHE_CONFIG_FILE     = $TWORAVENS_DIRECTORY . "/tworavens-rapache.conf";

unless ( -f $RAPACHE_CONFIG_FILE ) {
    print "\nWARNING: Can't find " . $RAPACHE_CONFIG_FILE . "!\n";
    print "(are you running the installer in the right directory?)\n";

    exit 0;
}

unless ( -d $APACHE_CONFIG_DIRECTORY ) {
    print "\nWARNING: Can't find Apache config directory - " . $APACHE_CONFIG_DIRECTORY . "!\n";
    print "(is Apache httpd installed on this system?)\n";

    exit 0;
}

system ("/bin/cp " . $RAPACHE_CONFIG_FILE . " " . $APACHE_CONFIG_DIRECTORY . "/conf.d");

# Start apache
#system ("service httpd restart");

# 3. Application directories

print "\nCreating application directories on the filesystem...\n";

for my $webDir ( "pic_dir", "preprocess_dir", "log_dir" ) {
    system ("mkdir --parents " . $APACHE_WEB_DIRECTORY . "/custom/" . $webDir);
    system ("chown -R apache " . $APACHE_WEB_DIRECTORY . "/custom/". $webDir);

    unless ( -d $APACHE_WEB_DIRECTORY . "/custom/". $webDir) {
	print "\nWARNING: Was unable to create the directory: " . $APACHE_WEB_DIRECTORY . "/". $webDir . "!\n";
	exit 0; 
    }
}

print "OK!\n";

# 4. Edit the JavaScript application file: 

my $TwoRavensWebApp = $TWORAVENS_DIRECTORY . "/app_ddi.js";
unless ( -f $TwoRavensWebApp ) {
    print "\nWARNING: Can't find " . $TwoRavensWebApp . "!\n";
    print "(are you running the installer in the right directory?)\n";
}

open WEBAPPFILEIN, $TwoRavensWebApp || die $@;
open WEBAPPFILEOUT, '>' . $TwoRavensWebApp . ".tmp" || die $@;

while (<WEBAPPFILEIN>) {
    # production toggle: 
    $_="var production=true;\n" if /^var production=false/;
    # rApache url:
    s/http:\/\/0.0.0.0:8000\/custom\//$RAPACHEURL\/custom\//g;
    s/https:\/\/dataverse-demo.iq.harvard.edu/$RAPACHEURL/g;
    # dataverse url: 
    s/%PRODUCTION_DATAVERSE_URL%/$DATAVERSE_URL/g;
    print WEBAPPFILEOUT $_;
}

close WEBAPPFILEIN;
close WEBAPPFILEOUT;

system ("/bin/mv " . $TwoRavensWebApp . ".tmp " . $TwoRavensWebApp);


# 5. Chown the TwoRavens directory to user Apache:

system ("chown -R apache " . $TWORAVENS_DIRECTORY);

print "\n\nGreat. You should now have a working TwoRavens installation!\n";
print "\nThe application URL is \n";
print $RAPACHEURL . "/dataexplore/gui.html\n\n";

